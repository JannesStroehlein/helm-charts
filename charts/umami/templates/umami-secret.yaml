apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "umami.fullname" . }}
  labels:
    {{- include "umami.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "umami.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "umami.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: umami
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATABASE_TYPE
              value: "postgresql"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "umami.pgAuthSecretName" . }}
                  key: database-url
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "umami.fullname" . }}-env
                  key: app-secret
          {{- with .Values.umami.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
